name: Sync ArgoCD Root App

on:
  workflow_dispatch:

jobs:
  sync-argocd-root-app:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-2

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-2 --name qrify-eks

      - name: Install Argo CD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/

      - name: Wait for Argo CD Server to be ready
        run: |
          kubectl rollout status deployment/argocd-server -n argocd --timeout=120s

      - name: Login to Argo CD using dynamic LoadBalancer URL
        run: |
          echo "Fetching ArgoCD LoadBalancer URL..."
          ARGOCD_HOST=$(kubectl -n argocd get svc argocd-server \
            -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          
          echo "Waiting a few seconds for DNS to resolve..."
          sleep 10
      
          echo "Fetching ArgoCD admin password..."
          ARGOCD_PASSWORD=$(kubectl -n argocd get secret argocd-initial-admin-secret \
            -o jsonpath="{.data.password}" | base64 -d)
      
          echo "Logging into ArgoCD at: https://$ARGOCD_HOST"
          argocd login https://$ARGOCD_HOST --username admin --password "$ARGOCD_PASSWORD" --insecure

      - name: Sync qrify-root-app
        run: |
          argocd app sync qrify-root-app
          argocd app wait qrify-root-app
